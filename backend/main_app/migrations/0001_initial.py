# Generated by Django 4.2.16 on 2024-10-17 07:04

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=30)),
                ('last_name', models.CharField(blank=True, max_length=30)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Complex',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('datetime', models.DateTimeField()),
                ('duration', models.IntegerField()),
                ('is_private', models.BooleanField(default=False)),
                ('level', models.IntegerField()),
                ('type', models.CharField(choices=[('LEISURE', 'Leisure'), ('COMPETITION', 'Competition')], max_length=20)),
                ('complex', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.complex')),
            ],
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('datetime', models.DateTimeField()),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('type', models.CharField(choices=[('LEISURE', 'Leisure'), ('COMPETITION', 'Competition')], max_length=20)),
                ('complex', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.complex')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('avatar_url', models.URLField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('defense_level', models.IntegerField(blank=True, null=True)),
                ('offense_level', models.IntegerField(blank=True, null=True)),
                ('service_level', models.IntegerField(blank=True, null=True)),
                ('side_preference', models.CharField(blank=True, choices=[('LEFT', 'Left'), ('RIGHT', 'Right'), ('BOTH', 'Both')], max_length=10, null=True)),
                ('is_onboarding_completed', models.BooleanField(default=False)),
                ('is_new_match_notification_enabled', models.BooleanField(default=False)),
                ('is_new_message_notification_enabled', models.BooleanField(default=False)),
                ('language', models.CharField(blank=True, max_length=10, null=True)),
                ('manual_preference', models.CharField(blank=True, choices=[('LEFT_HANDED', 'Left Handed'), ('RIGHT_HANDED', 'Right Handed')], max_length=20, null=True)),
                ('push_token', models.CharField(blank=True, max_length=255, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MatchRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('request_id', models.CharField(max_length=255)),
                ('has_payed', models.BooleanField(default=False)),
                ('invite_status', models.CharField(choices=[('ACCEPTED', 'Accepted'), ('REFUSED', 'Refused'), ('PENDING', 'Pending')], max_length=20)),
                ('status', models.CharField(choices=[('ACCEPTED', 'Accepted'), ('REFUSED', 'Refused'), ('PENDING', 'Pending')], max_length=20)),
                ('is_owner', models.BooleanField(default=False)),
                ('is_guest', models.BooleanField(default=False)),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.match')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.profile')),
            ],
        ),
        migrations.CreateModel(
            name='MatchFilter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('level_min', models.IntegerField()),
                ('level_max', models.IntegerField()),
                ('type', models.CharField(blank=True, choices=[('LEISURE', 'Leisure'), ('COMPETITION', 'Competition')], max_length=20, null=True)),
                ('complex', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main_app.complex')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.profile')),
            ],
        ),
        migrations.CreateModel(
            name='FavoriteUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('favorite_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorited_by', to='main_app.profile')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorite_users', to='main_app.profile')),
            ],
        ),
    ]
