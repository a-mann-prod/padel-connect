create type "public"."notification" as enum ('NEW_MESSAGE', 'NEW_MATCHES', 'NEW_MATCH_REQUEST', 'MATCH_REQUEST_RESPONSE_ACCEPTED', 'MATCH_REQUEST_RESPONSE_REFUSED');

create table "public"."notifications" (
    "id" bigint generated by default as identity not null,
    "title" text not null,
    "subtitle" text,
    "type" notification not null,
    "is_read" boolean not null default false,
    "user_id" uuid not null,
    "created_at" timestamp with time zone not null default now(),
    "url" text
);


alter table "public"."notifications" enable row level security;

CREATE UNIQUE INDEX notifications_pkey ON public.notifications USING btree (id);

alter table "public"."notifications" add constraint "notifications_pkey" PRIMARY KEY using index "notifications_pkey";

alter table "public"."notifications" add constraint "public_notifications_user_id_fkey" FOREIGN KEY (user_id) REFERENCES profiles(id) ON UPDATE RESTRICT ON DELETE CASCADE not valid;

alter table "public"."notifications" validate constraint "public_notifications_user_id_fkey";

grant delete on table "public"."notifications" to "anon";

grant insert on table "public"."notifications" to "anon";

grant references on table "public"."notifications" to "anon";

grant select on table "public"."notifications" to "anon";

grant trigger on table "public"."notifications" to "anon";

grant truncate on table "public"."notifications" to "anon";

grant update on table "public"."notifications" to "anon";

grant delete on table "public"."notifications" to "authenticated";

grant insert on table "public"."notifications" to "authenticated";

grant references on table "public"."notifications" to "authenticated";

grant select on table "public"."notifications" to "authenticated";

grant trigger on table "public"."notifications" to "authenticated";

grant truncate on table "public"."notifications" to "authenticated";

grant update on table "public"."notifications" to "authenticated";

grant delete on table "public"."notifications" to "service_role";

grant insert on table "public"."notifications" to "service_role";

grant references on table "public"."notifications" to "service_role";

grant select on table "public"."notifications" to "service_role";

grant trigger on table "public"."notifications" to "service_role";

grant truncate on table "public"."notifications" to "service_role";

grant update on table "public"."notifications" to "service_role";

create policy "Users can update their own notifications"
on "public"."notifications"
as permissive
for update
to authenticated
using ((auth.uid() = user_id));


create policy "Users can view their own notifications"
on "public"."notifications"
as permissive
for select
to authenticated
using ((auth.uid() = user_id));




